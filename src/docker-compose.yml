# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.4'

services:
  portainer:
    image: portainer/portainer-ce
    ports:
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

  redisinsight:
    image: redislabs/redisinsight
    ports:
      - 8001:8001
    volumes:
      - redisinsight_data:/db
    restart: always

  pgadmin4:
    image: dpage/pgadmin4
    ports:
      - 15432:80
    volumes:
      - pgadmin4_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password123456
    restart: always

  catalogdb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - catalog_data:/data/db
      - catalog_configsvr_data:/data/configdb
    restart: always

  catalogdbui:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=catalogdb
    restart: always
    depends_on:
      - catalogdb

  cartdb:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - cart_data:/data
    restart: always

  discountdb:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - discount_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password123456
      - POSTGRES_DB=discountdb
    restart: always

  catalogapi:
    image: catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Api/Dockerfile
    ports:
      - 5000:80
    environment:
      - MongoDbSetting:ConnectionString=mongodb://catalogdb:27017
    depends_on:
      - catalogdb

  cataloggrpc:
    image: cataloggrpc
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Grpc/Dockerfile
    ports:
      - 6000:80
    environment:
      - MongoDbSetting:ConnectionString=mongodb://catalogdb:27017
    depends_on:
      - catalogdb

  cartapi:
    image: cartapi
    build:
      context: .
      dockerfile: Services/Cart/Cart.Api/Dockerfile
    ports:
      - 5001:80
    environment:
      - RedisSetting:ConnectionString=cartdb:6379
      - GrpcSetting:CatalogUrl=http://cataloggrpc
    depends_on:
      - cartdb

  discountapi:
    image: discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.Api/Dockerfile
    ports:
      - 5002:80
    environment:
      - ConnectionStrings:postgresql=Host=discountdb;Port=5432;Database=discountdb;User ID=admin;Password=password123456;
    depends_on:
      - discountdb

volumes:
  portainer_data:
  redisinsight_data:
  pgadmin4_data:
  catalog_data:
  catalog_configsvr_data:
  cart_data:
  discount_data:
